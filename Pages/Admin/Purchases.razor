@page "/admin/purchases"

@inherits OwningComponentBase<IPurchaseRepository>

<PurchaseTable TableTitle="UnShipped Purchases" Purchases="UnShippedPurchases" ButtonLabel="Shipped" PurchaseSelected ="ShipPurchase"></PurchaseTable>

<PurchaseTable TableTitle="Collected Purchases" Purchases="ShippedPurchases" ButtonLabel="reset" PurchaseSelected ="ResetPurchase"></PurchaseTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh Data</button>

@code{

    public IPurchaseRepository repo => Service;

    public IEnumerable<Purchase> AllPurchases { get; set; }
    public IEnumerable<Purchase> UnShippedPurchases { get; set; }
    public IEnumerable<Purchase> ShippedPurchases { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllPurchases = await repo.Purchases.ToListAsync();
        UnShippedPurchases = AllPurchases.Where(x => !x.Shipped);
        ShippedPurchases = AllPurchases.Where(x => x.Shipped);
    }

    public void ShipPurchase(int id) => UpdatePurchase(id, true);

    public void ResetPurchase(int id) => UpdatePurchase(id, false);

    private void UpdatePurchase(int id, bool shipped)
    {
        Purchase p = repo.Purchases.FirstOrDefault(x=> x.PurchaseId == id);
        p.Shipped = shipped;
        repo.SavePurchase(p);
    }

}